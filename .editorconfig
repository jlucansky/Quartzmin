###############################
# Core EditorConfig Options   #
###############################

root = true

# All files
[*]
indent_style = space

# Code files
[*.{cs,csx,vb,vbx}]
indent_size = 4
trim_trailing_whitespace = true
insert_final_newline = false
charset = utf-8-bom

###############################
# .NET Coding Conventions     #
###############################

[*.{cs,vb}]
# Organize usings
dotnet_sort_system_directives_first = true
#dotnet_separate_import_directive_groups = false

# this. preferences
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_property = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_event = false:warning

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members:warning
dotnet_style_readonly_field = true:suggestion

# Expression-level preferences
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:silent
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:silent
dotnet_style_prefer_conditional_expression_over_assignment = true:silent
dotnet_style_prefer_conditional_expression_over_return = true:silent

###############################
# Naming Conventions          #
###############################

# Style Definitions
dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_naming_style.camel_case_style.capitalization = camel_case

dotnet_naming_style.I_prefix_style.required_prefix = I
dotnet_naming_style.I_prefix_style.capitalization = pascal_case

dotnet_naming_style.underscore_prefix_style.required_prefix = _
dotnet_naming_style.underscore_prefix_style.capitalization = camel_case

#dotnet_naming_style.constant_fields_style.word_separator = _
#dotnet_naming_style.constant_fields_style.capitalization = all_upper
dotnet_naming_style.constant_fields_style.capitalization = pascal_case

dotnet_naming_style.T_prefix_style.required_prefix = T
dotnet_naming_style.T_prefix_style.capitalization = pascal_case

# Use PascalCase for constant fields
dotnet_naming_rule.constant_fields_should_be_all_upper.symbols             = constant_fields_symbols
dotnet_naming_rule.constant_fields_should_be_all_upper.style               = constant_fields_style
dotnet_naming_rule.constant_fields_should_be_all_upper.severity            = warning
dotnet_naming_symbols.constant_fields_symbols.applicable_kinds             = field
dotnet_naming_symbols.constant_fields_symbols.applicable_accessibilities   = *
dotnet_naming_symbols.constant_fields_symbols.required_modifiers           = static

# Interfaces must be PascalCase and have an I prefix
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.symbols         = interface_type_symbol
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.style           = I_prefix_style
dotnet_naming_rule.interface_types_must_be_prefixed_with_I.severity        = warning
dotnet_naming_symbols.interface_type_symbol.applicable_accessibilities     = *
dotnet_naming_symbols.interface_type_symbol.applicable_kinds               = interface

# Member fields must be camelCase and have an underscore prefix
dotnet_naming_rule.member_fields_must_be_prefixed_with_underscore.symbols  = member_field_symbol
dotnet_naming_rule.member_fields_must_be_prefixed_with_underscore.style    = underscore_prefix_style
dotnet_naming_rule.member_fields_must_be_prefixed_with_underscore.severity = warning
dotnet_naming_symbols.member_field_symbol.applicable_accessibilities       = internal,protected,private
dotnet_naming_symbols.member_field_symbol.applicable_kinds                 = field

# Classes, structs, methods, enums, events, properties, namespaces, delegates must be PascalCase
dotnet_naming_rule.general_pascal_case_naming.symbols                      = general_symbol
dotnet_naming_rule.general_pascal_case_naming.style                        = pascal_case_style
dotnet_naming_rule.general_pascal_case_naming.severity                     = warning
dotnet_naming_symbols.general_symbol.applicable_accessibilities            = *
dotnet_naming_symbols.general_symbol.applicable_kinds                      = class,struct,enum,property,method,event,namespace,delegate

# Type parameters must be PascalCase and have an T prefix
dotnet_naming_rule.typeparam_must_be_prefixed_with_T.symbols               = typeparam_symbol
dotnet_naming_rule.typeparam_must_be_prefixed_with_T.style                 = T_prefix_style
dotnet_naming_rule.typeparam_must_be_prefixed_with_T.severity              = warning
dotnet_naming_symbols.typeparam_symbol.applicable_accessibilities          = *
dotnet_naming_symbols.typeparam_symbol.applicable_kinds                    = type_parameter

# Everything else is camelCase
#dotnet_naming_rule.everything_else_naming.symbols                          = everything_else_symbol
#dotnet_naming_rule.everything_else_naming.style                            = camel_case_style
#dotnet_naming_rule.everything_else_naming.severity                         = warning
#dotnet_naming_symbols.everything_else_symbol.applicable_accessibilities    = *
#dotnet_naming_symbols.everything_else_symbol.applicable_kinds              = *


###############################
# C# Code Style Rules         #
###############################

[*.cs]
# var preferences
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_elsewhere = true:silent

# Expression-bodied members
csharp_style_expression_bodied_methods = false:silent
csharp_style_expression_bodied_constructors = false:silent
csharp_style_expression_bodied_operators = false:silent
csharp_style_expression_bodied_properties = true:silent
csharp_style_expression_bodied_indexers = true:silent
csharp_style_expression_bodied_accessors = true:silent

# Pattern-matching preferences
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null-checking preferences
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Expression-level preferences
csharp_prefer_braces = true:warning
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_pattern_local_over_anonymous_function = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion

###############################
# C# Formatting Rules         #
###############################

# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left

# Space preferences
csharp_space_after_cast = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false

# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true

###############################
# Diagnostic Rules            #
###############################
# SA0001: XML comment analysis disabled
dotnet_diagnostic.SA0001.severity = none

# SA1025: Code should not contain multiple whitespace in a row
dotnet_diagnostic.SA1025.severity = none

# SA1101: Prefix local calls with this
dotnet_diagnostic.SA1101.severity = none

# SA1116: Split parameters should start on line after declaration
dotnet_diagnostic.SA1116.severity = none

# SA1117: Parameters should be on same line or separate lines
dotnet_diagnostic.SA1117.severity = none

# SA1118: Parameter should not span multiple lines
dotnet_diagnostic.SA1118.severity = none

# SA1119: Statement should not use unnecessary parenthesis
dotnet_diagnostic.SA1119.severity = none

# SA1122: Use string.Empty for empty string
dotnet_diagnostic.SA1122.severity = suggestion

# SA1124: Do not use regions
dotnet_diagnostic.SA1124.severity = none

# SA1129: Do not use default value type constructor
dotnet_diagnostic.SA1129.severity = none

# SA1133: Do not combine attributes
dotnet_diagnostic.SA1133.severity = none

# SA1200: Using directives should be placed correctly
dotnet_diagnostic.SA1200.severity = none

# SA1201: Elements should appear in the correct order
dotnet_diagnostic.SA1201.severity = none

# SA1202: Elements should be ordered by access
dotnet_diagnostic.SA1202.severity = none

# SA1204: Static elements should appear before instance elements
dotnet_diagnostic.SA1204.severity = none

# SA1300: Element should begin with upper-case letter
dotnet_diagnostic.SA1300.severity = none

# SA1306: Field names should begin with lower-case letter
dotnet_diagnostic.SA1306.severity = none

# SA1309: Field names should not begin with underscore
dotnet_diagnostic.SA1309.severity = none

# SA1310: Field names should not contain underscore
dotnet_diagnostic.SA1310.severity = none

# SA1311: Static readonly fields should begin with upper-case letter
#dotnet_diagnostic.SA1311.severity = none

# SA1401: Fields should be private
dotnet_diagnostic.SA1401.severity = none

# SA1402: File may only contain a single type
dotnet_diagnostic.SA1402.severity = none

# SA1413: Use trailing comma in multi-line initializers
dotnet_diagnostic.SA1413.severity = none

# SA1502: Element should not be on a single line
dotnet_diagnostic.SA1502.severity = none

# SA1503: Braces should not be omitted
dotnet_diagnostic.SA1503.severity = none

# SA1504: All accessors should be single-line or multi-line
dotnet_diagnostic.SA1504.severity = none

# SA1516: Elements should be separated by blank line
dotnet_diagnostic.SA1516.severity = none

# SA1600: Elements should be documented
dotnet_diagnostic.SA1600.severity = none

# SA1601: Partial elements should be documented
dotnet_diagnostic.SA1601.severity = none

# SA1602: Enumeration items should be documented
dotnet_diagnostic.SA1602.severity = none

# SA1629: Documentation text should end with a period
dotnet_diagnostic.SA1629.severity = none

# SA1633: File should have header
dotnet_diagnostic.SA1633.severity = none

# SA1649: File name should match first type name.
dotnet_diagnostic.SA1649.severity = suggestion

# SX1101: Do not prefix local calls with 'this.'
dotnet_diagnostic.SX1101.severity = warning

# SX1309: Field names should begin with underscore
dotnet_diagnostic.SX1309.severity = warning

# CA1001: Types that own disposable fields should be disposable
dotnet_diagnostic.CA1001.severity = suggestion

# CA1010: Collections should implement generic interface
dotnet_diagnostic.CA1010.severity = none

# CA1031: Do not catch general exception types
dotnet_diagnostic.CA1031.severity = silent

# CA1051: Do not declare visible instance fields
dotnet_diagnostic.CA1051.severity = suggestion

# CA1054: Uri parameters should not be strings
dotnet_diagnostic.CA1054.severity = silent

# CA1055: Uri return values should not be strings
dotnet_diagnostic.CA1055.severity = silent

# CA1056: Uri properties should not be strings
dotnet_diagnostic.CA1056.severity = silent

# CA1062: Validate arguments of public methods
dotnet_diagnostic.CA1062.severity = silent

# CA1303: Do not pass literals as localized parameters
dotnet_diagnostic.CA1303.severity = silent

# CA1304: Specify CultureInfo
dotnet_diagnostic.CA1304.severity = silent

# CA1305: Specify IFormatProvider
dotnet_diagnostic.CA1305.severity = silent

# CA1307: Specify StringComparison
dotnet_diagnostic.CA1307.severity = silent

# CA1308: Normalize strings to uppercase
dotnet_diagnostic.CA1308.severity = suggestion

# CA1707: Identifiers should not contain underscores
dotnet_diagnostic.CA1707.severity = none

# CA1710: Identifiers should have correct suffix
dotnet_diagnostic.CA1710.severity = none

# CA1822: Mark members as static
dotnet_diagnostic.CA1822.severity = silent

# CA1824: Mark assemblies with NeutralResourcesLanguageAttribute
dotnet_diagnostic.CA1824.severity = none

# CA1826: Do not use Enumerable methods on indexable collections. Instead use the collection directly
dotnet_diagnostic.CA1826.severity = none

# CA2000: Dispose objects before losing scope
dotnet_diagnostic.CA2000.severity = suggestion

# CA2007: Consider calling ConfigureAwait on the awaited task
dotnet_diagnostic.CA2007.severity = suggestion

# CA2227: Collection properties should be read only
dotnet_diagnostic.CA2227.severity = suggestion

# CA1819: Properties should not return arrays
dotnet_diagnostic.CA1819.severity = none

# CA2234: Pass system uri objects instead of strings
dotnet_diagnostic.CA2234.severity = none

# CA1040: Avoid empty interfaces
dotnet_diagnostic.CA1040.severity = none

# CA1030: Use events where appropriate
dotnet_diagnostic.CA1030.severity = silent

# CA1032: Implement standard exception constructors
dotnet_diagnostic.CA1032.severity = none
